<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>MyArrayList</title>
    <link href="/2021/05/21/MyArrayList/"/>
    <url>/2021/05/21/MyArrayList/</url>
    
    <content type="html"><![CDATA[<p>通过对集合数据结构以及对数组操作的认知，利用泛型的不设限性质，自写集合的增删改查操作。</p><p>😉</p><span id="more"></span><h2 id="自写MyArrayList"><a href="#自写MyArrayList" class="headerlink" title="自写MyArrayList"></a>自写MyArrayList</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.system.studetn.fs.util;<br><br><span class="hljs-keyword">import</span> java.util.Arrays;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 自定义实现MyArrayList</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@author</span> fStardust</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> &lt;E&gt; 自定义泛型</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">MyArrayList</span>&lt;<span class="hljs-title">E</span>&gt; </span>&#123;<br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 准备一个底层数组，用于存储数据内容</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">private</span> Object[] elements;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 初始化默认容量</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-keyword">int</span> DEFAULT_CAPACITY = <span class="hljs-number">10</span>;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 最大数组容量，-8是为了腾出一定的空间，保存数组的必要内容</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-keyword">int</span> MAX_ARRAY_SIZE = Integer.MAX_VALUE - <span class="hljs-number">8</span>;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 当前底层数组中保存的有效元素个数</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">private</span> <span class="hljs-keyword">int</span> size = <span class="hljs-number">0</span>;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 无参数构造方法，但是需要提供给用户一个初始化容量来保存必要的数据</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">MyArrayList</span><span class="hljs-params">()</span>  </span>&#123;<br><span class="hljs-comment">/*</span><br><span class="hljs-comment"> * 使用this关键字调用类内的其它构造方法</span><br><span class="hljs-comment"> * 根据实际参数类型来选对应的构造方法，必须在当前构造方法代码块的首行</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">this</span>(DEFAULT_CAPACITY);<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 用户指定保存元素容量的初始化过程，要求用户指定的容量范围是有效的</span><br><span class="hljs-comment"> * </span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> initCapacity 用户指定的初始化容量，</span><br><span class="hljs-comment"> * 但是不能小于等于0，不能大于MAX_ARRAY_SIZE</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">MyArrayList</span><span class="hljs-params">(<span class="hljs-keyword">int</span> initCapacity)</span> </span>&#123;<br><span class="hljs-comment">// 用户传入参数的合法性判断过程</span><br><span class="hljs-keyword">if</span> (initCapacity &lt; <span class="hljs-number">0</span> || initCapacity &gt; MAX_ARRAY_SIZE) &#123;<br><span class="hljs-comment">// 抛出异常</span><br><span class="hljs-comment">// IllegalArgumentException 是一个RuntimeException 运行时异常的子类</span><br><span class="hljs-comment">// 不需要强制声明抛出异常</span><br><span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> IllegalArgumentException(<span class="hljs-string">&quot;IllegalArgumentException:&quot;</span> + initCapacity);<br>&#125;<br><br>elements = <span class="hljs-keyword">new</span> Object[initCapacity];<br>&#125;<br><br><span class="hljs-comment">/*</span><br><span class="hljs-comment"> * 增加方法</span><br><span class="hljs-comment"> */</span><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 添加元素到当前集合的末尾</span><br><span class="hljs-comment"> * </span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> e 要求实符合泛型约束的指定数据类型 </span><br><span class="hljs-comment"> * <span class="hljs-doctag">@return</span> 添加成功返回true，否则返回false</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">boolean</span> <span class="hljs-title">add</span><span class="hljs-params">(E e)</span> </span>&#123;<br><span class="hljs-comment">// 直接调用在指定下标位置添加元素的方法</span><br><span class="hljs-comment">// 只不过这里指定下表位置就是尾插法下表位置</span><br><span class="hljs-keyword">return</span> add(size, e);<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 在底层数组的指定下标位置保存对应的元素</span><br><span class="hljs-comment"> * </span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> index 指定下标位置，不能超出有效范围， 0 &lt;= index &lt;= size</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> e 符合泛型约束的数据类型</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@return</span> 添加成功返回true，否则返回false</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">boolean</span> <span class="hljs-title">add</span><span class="hljs-params">(<span class="hljs-keyword">int</span> index, E e)</span> </span>&#123;<br><span class="hljs-keyword">if</span> (index &lt; <span class="hljs-number">0</span> || index &gt;size) &#123;<br><span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> ArrayIndexOutOfBoundsException(index);<br>&#125;<br><br>ensureCapacity(size + <span class="hljs-number">1</span>);<br><br><span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = size; i &gt; index; i--) &#123;<br>elements[i] = elements[i - <span class="hljs-number">1</span>];<br>&#125;<br><br>elements[index] = e;<br>size += <span class="hljs-number">1</span>;<br><br><span class="hljs-keyword">return</span> <span class="hljs-keyword">true</span>;<br>&#125;<br><br><span class="hljs-comment">/*</span><br><span class="hljs-comment"> * addAll方法</span><br><span class="hljs-comment"> * 1. 需要得到添加集合中元素内容，有效元素个数</span><br><span class="hljs-comment"> * 2. 确认容量问题</span><br><span class="hljs-comment"> * 3. size = SRCSize + newSize </span><br><span class="hljs-comment"> */</span><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 添加另一个集合到当前集合末尾</span><br><span class="hljs-comment"> * </span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> list MyArrayList类型，自定义ArrayList，要求存储元素和当前集合一致</span><br><span class="hljs-comment"> * 或者是其子类</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@return</span> 添加成功返回true，失败返回false</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">boolean</span> <span class="hljs-title">addAll</span><span class="hljs-params">(MyArrayList&lt;? extends E&gt; list)</span> </span>&#123;<br>Object[] array = list.toArray();<br><span class="hljs-keyword">int</span> newSize = array.length;<br><br>ensureCapacity(size + newSize);<br><br><span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; newSize; i++) &#123;<br>elements[i + size] = array[i];<br>&#125;<br><br>size += newSize;<br><span class="hljs-keyword">return</span> <span class="hljs-keyword">true</span>;<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 添加另一个符合当前集合要求的List，到当前集合内 </span><br><span class="hljs-comment"> * </span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> index 指定插入的下标位置</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> list 符合当前添加要求的另一个AyArrayList集合</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@return</span> 添加成功返回true</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">boolean</span> <span class="hljs-title">addAll</span><span class="hljs-params">(<span class="hljs-keyword">int</span> index, MyArrayList&lt;? extends E&gt; list)</span> </span>&#123;<br><br><span class="hljs-comment">// 用户指定的下标位置</span><br><span class="hljs-keyword">if</span> (index &lt; <span class="hljs-number">0</span> || index &gt;size) &#123;<br><span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> ArrayIndexOutOfBoundsException(index);<br>&#125;<br><br>ensureCapacity(size + <span class="hljs-number">1</span>);<br><br>Object[] array = list.toArray();<br><span class="hljs-keyword">int</span> newSize = array.length;<br><br>ensureCapacity(size + newSize);<br><br><span class="hljs-comment">// 移动操作</span><br><span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = size -<span class="hljs-number">1</span>; i &gt;= index; i--) &#123;<br>elements[i + newSize] = elements[i];<br>&#125;<br><br><span class="hljs-comment">// 存入目标元素</span><br><span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = index; i &lt; index + newSize; i++) &#123;<br>elements[i] = array[i - index];<br>&#125;<br><br><span class="hljs-comment">// 有效元素个数需要修改</span><br>size += newSize;<br><br><span class="hljs-keyword">return</span> <span class="hljs-keyword">true</span>;<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 删除指定元素</span><br><span class="hljs-comment"> * </span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> index 指定删除的元素</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@return</span> 删除成功返回true</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">boolean</span> <span class="hljs-title">remove</span><span class="hljs-params">(Object obj)</span> </span>&#123;<br><span class="hljs-keyword">int</span> index = indexOf(obj);<br><br><span class="hljs-keyword">return</span> <span class="hljs-keyword">null</span> != remove(index);<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 删除指定下标元素</span><br><span class="hljs-comment"> * </span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> index 指定的下标范围</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@return</span> 删除成功返回对应元素，失败返回null</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> E <span class="hljs-title">remove</span><span class="hljs-params">(<span class="hljs-keyword">int</span> index)</span> </span>&#123;<br><span class="hljs-keyword">if</span> (-<span class="hljs-number">1</span> == index) &#123;<br><span class="hljs-keyword">return</span> <span class="hljs-keyword">null</span>;<br>&#125;<br><br>E e = get(index);<br><br><span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = index; i &lt; size - <span class="hljs-number">1</span>; i++) &#123;<br>elements[i] = elements[i + <span class="hljs-number">1</span>];<br>&#125;<br><br><span class="hljs-comment">// 原本最后一个有效元素位置上的内容赋值为null</span><br>elements[size - <span class="hljs-number">1</span>] = <span class="hljs-keyword">null</span>;<br>size -= <span class="hljs-number">1</span>;<br><br><span class="hljs-keyword">return</span> e;<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 获取集合中指定下标的元素</span><br><span class="hljs-comment"> * </span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> index 指定下标的范围，但是不能超出有效下标位置</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@return</span> 返回对应的元素</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@SuppressWarnings(&quot;unchecked&quot;)</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> E <span class="hljs-title">get</span><span class="hljs-params">(<span class="hljs-keyword">int</span> index)</span> </span>&#123;<br><span class="hljs-keyword">if</span> (index &lt; <span class="hljs-number">0</span> || index &gt; size) &#123;<br><span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> ArrayIndexOutOfBoundsException(index);<br>&#125;<br><br><span class="hljs-keyword">return</span> (E) elements[index];<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 查询指定元素在集合中的第一次出现下标位置</span><br><span class="hljs-comment"> * </span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> obj 指定的元素</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@return</span> 返回值大于等于0表示找到元素，否则返回-1</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">int</span> <span class="hljs-title">indexOf</span><span class="hljs-params">(Object obj)</span> </span>&#123;<br><span class="hljs-keyword">int</span> index = -<span class="hljs-number">1</span>;<br><br><span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; size; i++) &#123;<br><span class="hljs-comment">// equals判断对象是否一致</span><br><span class="hljs-keyword">if</span> (obj.equals(elements[i])) &#123;<br>index = i;<br><span class="hljs-keyword">break</span>;<br>&#125;<br>&#125;<br><br><span class="hljs-keyword">return</span> index;<br>&#125;<br><br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 查询指定元素在集合中的最后一次出现下标位置</span><br><span class="hljs-comment"> * </span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> obj 指定的元素</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@return</span> 返回值大于等于0表示找到元素，否则返回-1</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">int</span> <span class="hljs-title">lastIndexOf</span><span class="hljs-params">(Object obj)</span> </span>&#123;<br><span class="hljs-keyword">int</span> index = -<span class="hljs-number">1</span>;<br><br><span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = size - <span class="hljs-number">1</span>; i &gt;= <span class="hljs-number">0</span>; i--) &#123;<br><span class="hljs-keyword">if</span> (obj.equals(elements[i])) &#123;<br>index = i;<br><span class="hljs-keyword">break</span>;<br>&#125;<br>&#125;<br><br><span class="hljs-keyword">return</span> index;<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 返回MyArrayList集合中所有有效元素的Object数组</span><br><span class="hljs-comment"> * </span><br><span class="hljs-comment"> * <span class="hljs-doctag">@return</span> 包含所有集合元素的Object类型数组</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">public</span> Object[] toArray() &#123;<br><span class="hljs-comment">// size是有效元素个数，通过该方法可以获取到一个只有当前数组有效元素的数组</span><br><span class="hljs-keyword">return</span> Arrays.copyOf(elements, size);<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 判断指定元素是否存在</span><br><span class="hljs-comment"> * </span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> obj 指定元素</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@return</span> 存在返回true，不存在返回false</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">boolean</span> <span class="hljs-title">contains</span><span class="hljs-params">(Object obj)</span> </span>&#123;<br><span class="hljs-keyword">return</span> indexOf(obj) &gt; -<span class="hljs-number">1</span>;<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * </span><br><span class="hljs-comment"> * 情况1：</span><br><span class="hljs-comment"> * 集合1&#123;1,3,5,9&#125;; 集合2&#123;3,5&#125;是子集合, 集合3&#123;5, 3&#125;不是子集合</span><br><span class="hljs-comment"> * 情况2：</span><br><span class="hljs-comment"> * 集合1&#123;1,3,5,9,3,7,8&#125;; 集合2&#123;3,7&#125;这是子集合, 集合3&#123;5,3&#125;不是子集合</span><br><span class="hljs-comment"> * </span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> list</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">boolean</span> <span class="hljs-title">containsAll</span><span class="hljs-params">(MyArrayList&lt;?&gt; list)</span> </span>&#123;<br><br><span class="hljs-comment">// 判断list是否为空，以及当前list对应的地址是否为null</span><br><span class="hljs-keyword">if</span> (<span class="hljs-keyword">null</span> == list || list.isEmpty()) &#123;<br><span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> NullPointerException();<br>&#125;<br><br><span class="hljs-comment">// 1. 计数器 找出list参数集合中下标为0的元素在集合中出现的位置次数</span><br><span class="hljs-keyword">int</span> count = <span class="hljs-number">0</span>;<br><span class="hljs-keyword">boolean</span> flag = <span class="hljs-keyword">true</span>;<br><br><span class="hljs-comment">// 2. 存储当前集合中下标为i的元素和list参数集合中下标为0的元素比较</span><br><span class="hljs-keyword">int</span>[] indexArr = <span class="hljs-keyword">new</span> <span class="hljs-keyword">int</span>[<span class="hljs-keyword">this</span>.size];<br><br><span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-keyword">this</span>.size; i++) &#123;<br><span class="hljs-comment">// 在当前集合中下标为i的元素和list参数集合中下标为0的元素比较</span><br><span class="hljs-keyword">if</span> (<span class="hljs-keyword">this</span>.get(i).equals(list.get(<span class="hljs-number">0</span>))) &#123;<br>indexArr[count] = i;<br>count += <span class="hljs-number">1</span>;<br>&#125;<br>&#125;<br><br><span class="hljs-comment">// 4. 判定是否存在list.get(0)的元素</span><br><span class="hljs-keyword">if</span> (<span class="hljs-number">0</span> == count) &#123;<br><span class="hljs-keyword">return</span> <span class="hljs-keyword">false</span>;<br>&#125;<br><br><span class="hljs-comment">// 5. 进入循环，开始匹配</span><br><span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; count; i++) &#123;<br><br><span class="hljs-comment">// 6. 遍历操作当前集合</span><br><span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> j = indexArr[i] + <span class="hljs-number">1</span>; j &lt; indexArr[i] + list.size(); j++) &#123;<br><br><span class="hljs-comment">// list从下标1开始获取元素</span><br><span class="hljs-keyword">int</span> index = <span class="hljs-number">1</span>;<br><span class="hljs-keyword">if</span> (!<span class="hljs-keyword">this</span>.get(j).equals(list.get(index++))) &#123;<br>flag =  <span class="hljs-keyword">false</span>;<br><span class="hljs-keyword">break</span>;<br>&#125;<br><br>flag = <span class="hljs-keyword">true</span>;<br>&#125;<br><br><span class="hljs-keyword">if</span> (flag) &#123;<br><span class="hljs-keyword">break</span>;<br>&#125;<br>&#125;<br><br><span class="hljs-keyword">return</span> flag;<br><br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 判断集合是否为空</span><br><span class="hljs-comment"> * </span><br><span class="hljs-comment"> * <span class="hljs-doctag">@return</span> 如果为空，返回true</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">boolean</span> <span class="hljs-title">isEmpty</span><span class="hljs-params">()</span>  </span>&#123;<br><span class="hljs-keyword">return</span> size == <span class="hljs-number">0</span>;<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 获取当前集合中有效元素个数</span><br><span class="hljs-comment"> * </span><br><span class="hljs-comment"> * <span class="hljs-doctag">@return</span> 有效元素个数</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">int</span> <span class="hljs-title">size</span><span class="hljs-params">()</span> </span>&#123;<br><span class="hljs-keyword">return</span> size;<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 获取当前集合的子集合 截取范围fromIndex &lt;= n &lt; endIndex</span><br><span class="hljs-comment"> * </span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> fromIndex fromIndex &lt;= endIndex 不得小于0</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> endIndex endIndex &gt;= formIndex 小于等于size</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@return</span> 截取得到的一个MyArrayList子集合对象</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> MyArrayList&lt;E&gt; <span class="hljs-title">subList</span><span class="hljs-params">(<span class="hljs-keyword">int</span> fromIndex, <span class="hljs-keyword">int</span> endIndex)</span> </span>&#123;<br><span class="hljs-keyword">if</span> (fromIndex &gt; endIndex || fromIndex &lt; <span class="hljs-number">0</span> || endIndex &gt; size) &#123;<br><span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> ArrayIndexOutOfBoundsException();<br>&#125;<br><br>MyArrayList&lt;E&gt; listTemp = <span class="hljs-keyword">new</span> MyArrayList&lt;E&gt;(endIndex - fromIndex);<br><br><span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = fromIndex; i &lt; endIndex; i++) &#123;<br>listTemp.add(<span class="hljs-keyword">this</span>.get(i));<br>&#125;<br><br><span class="hljs-keyword">return</span> listTemp;<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 替换指定下标元素</span><br><span class="hljs-comment"> * </span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> index 指定下标元素，但是必须在有效范围以内</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> e 符合泛型约束的对应数据类型</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@return</span> 被替换的元素</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> E <span class="hljs-title">set</span><span class="hljs-params">(<span class="hljs-keyword">int</span> index, E e)</span> </span>&#123;<br><span class="hljs-keyword">if</span> (index &lt; <span class="hljs-number">0</span> || index &gt;= size) &#123;<br><span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> ArrayIndexOutOfBoundsException(index);<br>&#125;<br><br>E temp = get(index);<br>elements[index] = e;<br><br><span class="hljs-keyword">return</span> temp;<br>&#125;<br><br><span class="hljs-meta">@Override</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> String <span class="hljs-title">toString</span><span class="hljs-params">()</span> </span>&#123;<br>String str = <span class="hljs-string">&quot;[&quot;</span>;<br><span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; size -<span class="hljs-number">1</span>; i++) &#123;<br>str += elements[i] + <span class="hljs-string">&quot;, &quot;</span>;<br>&#125;<br><br><span class="hljs-keyword">return</span> str + elements[size - <span class="hljs-number">1</span>] + <span class="hljs-string">&quot;]&quot;</span>;<br>&#125;<br><br><span class="hljs-comment">/*</span><br><span class="hljs-comment"> * 这里需要类内使用的可以用于判定当前容量是否满足添加要求的方法，</span><br><span class="hljs-comment"> * 如果满足直接进入添加模式，如果不满足，需要执行grow方法</span><br><span class="hljs-comment"> * 完成底层数组扩容问题</span><br><span class="hljs-comment"> */</span><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 每一次添加元素，都需要进行容量判断，如果满足可以进行添加操作</span><br><span class="hljs-comment"> * 不满足则需要制定grow方法</span><br><span class="hljs-comment"> * </span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> minCapacity 要求的最小容量</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title">ensureCapacity</span><span class="hljs-params">(<span class="hljs-keyword">int</span> minCapacity)</span> </span>&#123;<br><span class="hljs-keyword">if</span> (minCapacity &gt; elements.length) &#123;<br><span class="hljs-comment">// 完成一个底层数组的扩容方法</span><br>grow(minCapacity);<br>&#125;<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 底层数组的扩容方法，原理是创建新数组，移植数据，保存新数组地址</span><br><span class="hljs-comment"> * </span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> minCapacity 要求的最小容量v         </span><br><span class="hljs-comment"> </span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title">grow</span><span class="hljs-params">(<span class="hljs-keyword">int</span> minCapacity)</span> </span>&#123;<br><span class="hljs-comment">// 1. 获取原数组容量</span><br><span class="hljs-keyword">int</span> oldCapacity = elements.length;<br><br><span class="hljs-comment">// 2. 计算得到新数组容量</span><br><span class="hljs-keyword">int</span> newCapactiy = oldCapacity + (oldCapacity &gt;&gt; <span class="hljs-number">1</span>);<br><br><span class="hljs-comment">// 3. 判断新数组容量是否满足要求</span><br><span class="hljs-keyword">if</span> (newCapactiy &lt; minCapacity) &#123;<br>newCapactiy = minCapacity;<br>&#125;<br><span class="hljs-comment">// 新数组容量是否大于允许的最大数组容量</span><br><span class="hljs-keyword">if</span> (newCapactiy &gt; MAX_ARRAY_SIZE) &#123;<br><span class="hljs-comment">// 二次判断IllegalArgumentException是否小于MAX_ARRAY_SIZE</span><br><span class="hljs-keyword">if</span> (minCapacity &lt; MAX_ARRAY_SIZE) &#123;<br><span class="hljs-comment">// 最小要求是不大于MAX_ARRAY_SIZE，代码可以允许</span><br>newCapactiy = minCapacity;<br>&#125; <span class="hljs-keyword">else</span> &#123;<br><span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> OutOfMemoryError(<span class="hljs-string">&quot;Overflow MAX_ARRAY_SIZE&quot;</span>);<br>&#125;<br>&#125;<br><br><span class="hljs-comment">/*</span><br><span class="hljs-comment"> * 4. 使用数组工具类完成操作</span><br><span class="hljs-comment"> * Arrays.copyOf(源数据数组-可以是任意类型-采用泛型约束, 指定的新数组容量);</span><br><span class="hljs-comment"> * 1. 根据指定的新数组容量创建对应泛型数据类型的新数组</span><br><span class="hljs-comment"> * 2. 从源数据数组中拷贝内容到新数组</span><br><span class="hljs-comment"> * 3. 返回新数组首地址</span><br><span class="hljs-comment"> */</span><br>elements = Arrays.copyOf(elements, newCapactiy);<br>&#125;<br>&#125;<br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Code,Java,Learn</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2021/05/11/hello-world/"/>
    <url>/2021/05/11/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
